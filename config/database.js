const sql = require("mssql/msnodesqlv8");

// C·∫•u h√¨nh k·∫øt n·ªëi SQL Server
const masterConfig = {
  connectionString:
    "Driver={ODBC Driver 17 for SQL Server};" +
    "Server=Kenju\\CENTER;" + // D√πng ƒë√∫ng t√™n instance
    "Database=TrungTam;" +
    "Uid=sa;" +
    "Pwd=12345;",
  options: {
    encrypt: false, // T·∫Øt n·∫øu kh√¥ng d√πng SSL
    trustServerCertificate: true,
  },
};

const regionalConfigs = {
  north: {
    connectionString:
      "Driver={ODBC Driver 17 for SQL Server};" +
      "Server=Kenju\\CENTER;" + // D√πng ƒë√∫ng t√™n instance
      "Database=ChiNhanhBac;" +
      "Uid=sa;" +
      "Pwd=12345;",
    options: {
      encrypt: false, // T·∫Øt n·∫øu kh√¥ng d√πng SSL
      trustServerCertificate: true,
    },
  },
  south: {
    connectionString:
      "Driver={ODBC Driver 17 for SQL Server};" +
      "Server=Kenju\\CENTER;" + // D√πng ƒë√∫ng t√™n instance
      "Database=ChiNhanhNam;" +
      "Uid=sa;" +
      "Pwd=12345;",
    options: {
      encrypt: false, // T·∫Øt n·∫øu kh√¥ng d√πng SSL
      trustServerCertificate: true,
    },
  },
};
async function testConnectionRegion(region, config) {
  try {
    console.log(`üîÑ ƒêang th·ª≠ k·∫øt n·ªëi ƒë·∫øn: ${region}`);
    const pool = await sql.connect(config);
    console.log(`‚úÖ K·∫øt n·ªëi th√†nh c√¥ng ƒë·∫øn database: ${region}`);
    await pool.close();
  } catch (error) {
    console.error(`‚ùå L·ªói k·∫øt n·ªëi ${region}:`, error.message);
  }
}

// Ki·ªÉm tra c·∫£ hai chi nh√°nh
async function testAllConnections() {
  await testConnectionRegion("ChiNhanhBac", regionalConfigs.north);
  await testConnectionRegion("ChiNhanhNam", regionalConfigs.south);
}

// Ki·ªÉm tra k·∫øt n·ªëi
async function testConnection() {
  try {
    console.log("üîÑ ƒêang th·ª≠ k·∫øt n·ªëi ƒë·∫øn:", "TrungTam");

    const pool = await sql.connect(masterConfig);

    console.log(
      "‚úÖ K·∫øt n·ªëi th√†nh c√¥ng ƒë·∫øn database: Trung Tam ",

    );

    await pool.close();
  } catch (error) {
    console.error("‚ùå L·ªói k·∫øt n·ªëi:", error.message);
  }
}

// Th·ª≠ k·∫øt n·ªëi
testConnection();
 testAllConnections();
// Xu·∫•t module
module.exports = {masterConfig};
